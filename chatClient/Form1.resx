<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sendMessage.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="myPhoto.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>